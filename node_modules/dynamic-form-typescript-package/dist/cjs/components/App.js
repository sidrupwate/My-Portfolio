"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importStar(require("react"));
var material_1 = require("@mui/material");
var MyForm = /** @class */ (function (_super) {
    tslib_1.__extends(MyForm, _super);
    function MyForm() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MyForm.prototype.renderFormFields = function () {
        var _this = this;
        var formArray = this.props.formArray;
        return formArray.map(function (item, idx) {
            var name = item.name, value = item.value, label = item.label, type = item.type, fieldoption = item.fieldoption, gridSizes = item.gridSizes;
            if (type === "textfield") {
                return (react_1.default.createElement(material_1.Grid, tslib_1.__assign({ item: true }, gridSizes, { key: idx }),
                    react_1.default.createElement("div", null,
                        react_1.default.createElement(material_1.TextField, { label: label, name: name, value: value, onChange: function (e) { return _this.props.handleChange(e, name); }, type: "text", required: true, style: { width: "350px" } }))));
            }
            if (type === "select") {
                return (react_1.default.createElement(material_1.Grid, tslib_1.__assign({ item: true }, gridSizes, { key: idx }),
                    react_1.default.createElement("div", null,
                        react_1.default.createElement(material_1.FormControl, { style: { width: "100px" } },
                            react_1.default.createElement(material_1.InputLabel, { id: "select-label-".concat(idx) }, label),
                            react_1.default.createElement(material_1.Select, { labelId: "select-label-".concat(idx), id: "select-".concat(idx), value: value, label: label, onChange: function (e) { return _this.props.handleChange(e, name); }, required: true }, fieldoption === null || fieldoption === void 0 ? void 0 : fieldoption.map(function (i, index) { return (react_1.default.createElement(material_1.MenuItem, { key: index, value: i.value }, i.name)); }))))));
            }
            return null;
        });
    };
    MyForm.prototype.render = function () {
        var handleSubmit = this.props.handleSubmit;
        return (react_1.default.createElement("div", null,
            react_1.default.createElement(material_1.Paper, null,
                react_1.default.createElement("h1", null, "Welcome"),
                react_1.default.createElement(material_1.Grid, { container: true },
                    this.renderFormFields(),
                    react_1.default.createElement(material_1.Grid, { item: true },
                        react_1.default.createElement("div", null,
                            react_1.default.createElement(material_1.Button, { variant: "contained", onClick: handleSubmit }, "Continue")))))));
    };
    return MyForm;
}(react_1.Component));
exports.default = MyForm;
//# sourceMappingURL=App.js.map